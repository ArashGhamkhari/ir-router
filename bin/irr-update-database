#!/bin/python3
import csv
import ipaddress
import os
import requests
import zipfile
import io

url = 'https://download.ip2location.com/lite/IP2LOCATION-LITE-DB1.CSV.ZIP'
output_file = os.path.join("/var/lib/ir-router", "ir.cidr")


def ip_to_cidrs(start_ip, end_ip):
    start = int(ipaddress.IPv4Address(start_ip))
    end = int(ipaddress.IPv4Address(end_ip))
    cidrs = ipaddress.summarize_address_range(ipaddress.IPv4Address(start), ipaddress.IPv4Address(end))
    return [str(cidr) for cidr in cidrs]


def extract_ir(ip2location_csv_file):
    with open(ip2location_csv_file, newline='') as csvfile, open(output_file, 'w+') as outfile:
        reader = csv.reader(csvfile)
        for row in reader:
            from_ip, to_ip, country, _ = row
            country = country.strip('"')
            if country == 'IR':
                from_ip = ipaddress.IPv4Address(int(from_ip.strip('"')))
                to_ip = ipaddress.IPv4Address(int(to_ip.strip('"')))
                cidrs = ip_to_cidrs(from_ip, to_ip)
                outfile.write("\n".join(cidrs) + "\n")


response = requests.get(url)
if response.status_code == 200:
    with zipfile.ZipFile(io.BytesIO(response.content)) as zip_ref:
        file_list = zip_ref.namelist()
        file_name = 'IP2LOCATION-LITE-DB1.CSV'
        if file_name in file_list:
            zip_ref.extract(file_name, path='/tmp')
            extract_ir('/tmp/IP2LOCATION-LITE-DB1.CSV')
        else:
            print(f'{file_name} not found in the zip archive.')
else:
    print(f'Failed to download the zip file. Status code: {response.status_code}')

os.remove('/tmp/IP2LOCATION-LITE-DB1.CSV')
